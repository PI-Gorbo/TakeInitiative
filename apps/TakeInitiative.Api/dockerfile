# Create a layer to build the image.
# Use the official .NET Core SDK as a parent image
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR ./app

# Copy the project file and restore any dependencies (use .csproj for the project name)
# Copying from working directory into the layer.
COPY *.csproj ./ 
RUN dotnet restore

# Copy the rest of the application code
COPY . ./



# Publish the application
RUN dotnet publish -c Release -o out

# Now, from the published layer, we take the artifacts and place them into their own layer for running.
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime
WORKDIR ./app
COPY --from=build /app/out ./

# Expose the port the application will run on
EXPOSE 80

# Install python below.
RUN apt-get update && apt-get install python3 python3-dev libffi-dev -y
RUN echo $(ls /usr/lib/python3.11 )
ENV PythonDLL=/usr/lib/python3.11/config-3.11-arm-linux-gnu/libpython3.11.so

# Start the application
ENTRYPOINT ["dotnet", "TakeInitiative.Api.dll"]