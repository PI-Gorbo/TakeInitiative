{
  "name": "takeinitiative",
  "version": "0.7.5",
  "scripts": {
    "docker:build:api": "docker build -t takeinitiative-api:latest ./apps/TakeInitiative.Api/",
    "docker:drop:api": "docker stop takeapi && docker rm takeapi",
    "run:api": "docker start takedb && cd ./apps/TakeInitiative.Api && dotnet run",
    "run:api:watch": "cd ./apps/TakeInitiative.Api && dotnet watch run",

    "docker:build:web": "docker build -t takeinitiative-web:latest ./apps/TakeInitiative.Web/",
    "docker:drop:web": "docker stop takeweb && docker rm takeweb",
    "run:web": "cd ./apps/TakeInitiative.Web && npm run dev",

    "docker:isolated:database": "docker run -p 5432:5432 --name takedb -e POSTGRES_PASSWORD=postgres -d postgres",
    "docker:drop:database": "docker stop takedb && docker rm takedb",

    "docker:build": "npm run docker:build:api && npm run docker:build:web",
    "docker:compose": "docker compose up -d",
    "docker:dev:compose": "npm run docker:build && docker compose -f compose.dev.yml up -d",

    "docker:publish": "npm run docker:build && npm run docker:drop:api && npm run docker:drop:web && npm run docker:compose",
    "docker:refresh:web": "npm run docker:build:web && npm run docker:drop:web && npm run docker:compose",
    "docker:refresh:api": "npm run docker:build:api && npm run docker:drop:api && npm run docker:compose",
    "docker:refresh:database": "npm run docker:drop:database && npm run docker:compose"
  }
}
